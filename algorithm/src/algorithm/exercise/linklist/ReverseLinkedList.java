package algorithm.exercise.linklist;

/**
 * 【206. 反转链表】反转一个单链表。 示例: 输入: 1->2->3->4->5->NULL 输出: 5->4->3->2->1->NULL 进阶:
 * 你可以迭代或递归地反转链表。你能否用两种方法解决这道题？ 来源：力扣（LeetCode）
 * 链接：https://leetcode-cn.com/problems/reverse-linked-list
 * 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
 * 
 * @author chying
 *
 */
public class ReverseLinkedList {

	public ListNode reverseList(ListNode head) {
		ListNode p = head;
		ListNode pre = null;
		while (p != null && p.next != null) {
			ListNode temp = p.next.next;
			p.next.next = p;
			p = p.next;
		}
		return null;
	}

	public static void main(String[] args) {
		ReverseLinkedList a = new ReverseLinkedList();
		ListNode head = ListNode.getListNode();
		System.out.println(ListNode.printStr(a.reverseList(head)));

	}

}
